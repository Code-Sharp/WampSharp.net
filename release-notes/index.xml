<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Release-notes on WampSharp</title>
    <link>https://wampsharp.net/release-notes/</link>
    <description>Recent content in Release-notes on WampSharp</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Copyright (c) 2013-2018, Elad Zelingher; All rights reserved.</copyright>
    <lastBuildDate>Fri, 01 Jun 2018 09:51:52 -0400</lastBuildDate>
    
	<atom:link href="https://wampsharp.net/release-notes/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>WampSharp v18.6.1 release notes</title>
      <link>https://wampsharp.net/release-notes/wampsharp-v18.6.1-release-notes/</link>
      <pubDate>Fri, 01 Jun 2018 09:51:52 -0400</pubDate>
      
      <guid>https://wampsharp.net/release-notes/wampsharp-v18.6.1-release-notes/</guid>
      <description>New features ObserveOn extension method From this version, the client fluent syntax api supports a new ObserverOn method. This method allows you to specify an IScheduler that WAMP messages will be observed on. This for instance allows to ensure that reflection based callee methods or reflection based subscriber event handlers are invoked on the Dispatcher thread.
Usage example:
IWampChannel channel = channelFactory.ConnectToRealm(&amp;quot;realm1&amp;quot;) .WebSocketTransport(&amp;quot;ws://127.0.0.1:8080/ws&amp;quot;) .JsonSerialization() .ObserveOn(DispatcherScheduler.Current) .Build();  RawSocket Ssl support From this version, RawSocket Ssl security is supported.</description>
    </item>
    
    <item>
      <title>WampSharp v1.2.6.41-beta release notes</title>
      <link>https://wampsharp.net/release-notes/wampsharp-v1.2.6.41-beta-release-notes/</link>
      <pubDate>Tue, 08 Aug 2017 14:39:35 +0300</pubDate>
      
      <guid>https://wampsharp.net/release-notes/wampsharp-v1.2.6.41-beta-release-notes/</guid>
      <description>New features New transports A few router-side WebSockets transports have been added in this version. These include HttpListener based transport, ASP.NET based transport and Microsoft.Owin based transport.
CANCEL/INTERRUPT support CANCEL/INTERRUPT support has been added to Crossbar recently. From this version, WampSharp supports rpc cancellations, both on router-side and on client-side.
Reflection based caller/callee cancellation support Cancellation is supported for reflection based caller and callee via the CancellationToken api. In order to declare a callee procedure which supports cancellation, declare an async method which receives as its last argument a CancellationToken:</description>
    </item>
    
    <item>
      <title>WampSharp v1.2.5.21-beta release notes</title>
      <link>https://wampsharp.net/release-notes/wampsharp-v1.2.5.21-beta-release-notes/</link>
      <pubDate>Mon, 29 Aug 2016 10:25:07 +0900</pubDate>
      
      <guid>https://wampsharp.net/release-notes/wampsharp-v1.2.5.21-beta-release-notes/</guid>
      <description>C# 7.0 tuples support This verion mainly focuses on C# 7.0 tuples support.
 Note: C# 7.0 tuples syntax is currently supported only by Visual Studio &amp;ldquo;15&amp;rdquo; Preview 4. You can download it here.
 Reflection-based callee tuples support From this version, you can return a C# 7.0 tuple from a reflection-based callee method. The tuple will be serialized to either the arguments keywords or to the arguments array of the YIELD message, depending on whether the returned tuple has named elements or positional elements.</description>
    </item>
    
    <item>
      <title>WampSharp v1.2.4.18-beta release notes</title>
      <link>https://wampsharp.net/release-notes/wampsharp-v1.2.4.18-beta-release-notes/</link>
      <pubDate>Sat, 30 Jul 2016 10:25:07 +0900</pubDate>
      
      <guid>https://wampsharp.net/release-notes/wampsharp-v1.2.4.18-beta-release-notes/</guid>
      <description>New features .NET Standard support This verion mainly focuses on .NET Standard support. WampSharp now supports .NET Standard 1.3 which means that it is compatible with .NET Framework 4.6, NET Core, Universal Windows Platform 10 and Mono/Xamarin platforms.
Only WAMPv2 is currenly supported (WAMPv1 hasn&amp;rsquo;t been ported yet). Both Json and MsgPack support is available. RawSocket support has also been ported.
Regarding WebSockets:
 Client-side support is available: it works via a new implementation of WampConnection which is based on System.</description>
    </item>
    
    <item>
      <title>WampSharp v1.2.3.12-beta release notes</title>
      <link>https://wampsharp.net/release-notes/wampsharp-v1.2.3.12-beta-release-notes/</link>
      <pubDate>Fri, 09 Oct 2015 10:25:07 +0900</pubDate>
      
      <guid>https://wampsharp.net/release-notes/wampsharp-v1.2.3.12-beta-release-notes/</guid>
      <description>New features Router side authentication From this version, router-side authentication is supported. Also WAMP-CRA is supported.
Also, Cookie based authenticators are supported.
Currently authentication details (authid, authmethod and authrole) are forwarded to callees if the caller is disclosed. These are accessible via WampInvocationContext. This might change according to the WAMP spec decision.
WampChannelFactory fluent syntax This version introduces new api to obtain a IWampChannel. The api is fluent and allows customization.</description>
    </item>
    
    <item>
      <title>WampSharp v1.2.2.8-beta release notes</title>
      <link>https://wampsharp.net/release-notes/wampsharp-v1.2.2.8-beta-release-notes/</link>
      <pubDate>Sat, 13 Jun 2015 10:25:07 +0900</pubDate>
      
      <guid>https://wampsharp.net/release-notes/wampsharp-v1.2.2.8-beta-release-notes/</guid>
      <description>Breaking changes Library split up WampSharp.Default split up WampSharp.Default.dll has been split up into a couple of libraries. This allows you to consume only the libraries you are interested in:
 WampSharp.Fleck - This NuGet package contains WampSharp implementation of a WebSocket transport using Fleck. WampSharp.NewtonsoftJson - This NuGet package contains WampSharp support for Json serialization using Newtonsoft Json WampSharp.NewtonsoftMsgpack - This NuGet package contains WampSharp support for MsgPack serialization using Newtonsoft.</description>
    </item>
    
    <item>
      <title>WampSharp v1.2.1.6-beta release notes</title>
      <link>https://wampsharp.net/release-notes/wampsharp-v1.2.1.6-beta-release-notes/</link>
      <pubDate>Sat, 28 Feb 2015 10:25:07 +0900</pubDate>
      
      <guid>https://wampsharp.net/release-notes/wampsharp-v1.2.1.6-beta-release-notes/</guid>
      <description>Api changes IAsyncDisposable A new type called IAsyncDisposable is introduced in the library. It&amp;rsquo;s similar to IDisposable, but returns a Task.
public interface IAsyncDisposable { Task DisposeAsync(); }  Task&amp;lt;IAsyncDisposable&amp;gt; is returned from some methods:
 IWampTopicProxy Subscribe method now returns an Task&amp;lt;IAsyncDisposable&amp;gt; instead of Task&amp;lt;IDisposable&amp;gt;, you can call DisposeAsync in order to unsubscribe from the topic. IWampRpcOperationCatalogProxy Register method now returns Task&amp;lt;IAsyncDisposable&amp;gt; instead of Task. Call DisposeAsync to Unregister the procedure from router.</description>
    </item>
    
  </channel>
</rss>